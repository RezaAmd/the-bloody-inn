// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheBloodyInn.Infrastructure.Persistence.Context;

#nullable disable

namespace TheBloodyInn.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241201123819_InitGameTables")]
    partial class InitGameTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Identities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users", "Auth");
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Innkeepers.InnkeeperEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlayerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Innkeepers", "Game");
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Inns.InnEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("MaxPlayerCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("Setting")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Inns", "Game");
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Inns.InnRoomEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InnId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InnKeeperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InnId");

                    b.HasIndex("InnKeeperId");

                    b.ToTable("InnRooms", "Game");
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Identities.UserEntity", b =>
                {
                    b.OwnsOne("TheBloodyInn.Domain.ValueObjects.PasswordHash", "PasswordHash", b1 =>
                        {
                            b1.Property<Guid>("UserEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("PasswordHashed");

                            b1.HasKey("UserEntityId");

                            b1.ToTable("Users", "Auth");

                            b1.WithOwner()
                                .HasForeignKey("UserEntityId");
                        });

                    b.Navigation("PasswordHash");
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Innkeepers.InnkeeperEntity", b =>
                {
                    b.OwnsOne("TheBloodyInn.Domain.ValueObjects.Franc10CheckMoney", "CheckMoney", b1 =>
                        {
                            b1.Property<Guid>("InnkeeperEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte>("Count")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("tinyint")
                                .HasDefaultValue((byte)0)
                                .HasColumnName("CheckMoney");

                            b1.HasKey("InnkeeperEntityId");

                            b1.ToTable("Innkeepers", "Game");

                            b1.WithOwner()
                                .HasForeignKey("InnkeeperEntityId");
                        });

                    b.OwnsOne("TheBloodyInn.Domain.ValueObjects.FrancCash", "Cash", b1 =>
                        {
                            b1.Property<Guid>("InnkeeperEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("tinyint")
                                .HasDefaultValue((byte)0)
                                .HasColumnName("Cash");

                            b1.HasKey("InnkeeperEntityId");

                            b1.ToTable("Innkeepers", "Game");

                            b1.WithOwner()
                                .HasForeignKey("InnkeeperEntityId");
                        });

                    b.Navigation("Cash")
                        .IsRequired();

                    b.Navigation("CheckMoney")
                        .IsRequired();
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Inns.InnEntity", b =>
                {
                    b.HasOne("TheBloodyInn.Domain.Entities.Innkeepers.InnkeeperEntity", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Inns.InnRoomEntity", b =>
                {
                    b.HasOne("TheBloodyInn.Domain.Entities.Inns.InnEntity", "Inn")
                        .WithMany("Rooms")
                        .HasForeignKey("InnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheBloodyInn.Domain.Entities.Innkeepers.InnkeeperEntity", "InnKeeper")
                        .WithMany("Rooms")
                        .HasForeignKey("InnKeeperId");

                    b.Navigation("Inn");

                    b.Navigation("InnKeeper");
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Innkeepers.InnkeeperEntity", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TheBloodyInn.Domain.Entities.Inns.InnEntity", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
